<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.shijiehouduan.dao.AdminUserDao">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.example.shijiehouduan.entity.AdminUser">
        <id column="admin_id" property="adminId"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="role" property="role"/>
        <result column="status" property="status"/>
        <result column="last_login" property="lastLogin"/>
        <result column="created_at" property="createdAt"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        admin_id, username, password, name, role, status, last_login, created_at
    </sql>

    <!-- 根据ID查询管理员 -->
    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM admin_users
        WHERE admin_id = #{adminId}
    </select>

    <!-- 根据用户名查询管理员 -->
    <select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM admin_users
        WHERE username = #{username}
    </select>

    <!-- 根据角色查询管理员 -->
    <select id="findByRole" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM admin_users
        WHERE role = #{role}
        ORDER BY created_at DESC
    </select>

    <!-- 根据状态查询管理员 -->
    <select id="findByStatus" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM admin_users
        WHERE status = #{status}
        ORDER BY created_at DESC
    </select>

    <!-- 查询所有管理员 -->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM admin_users
        ORDER BY created_at DESC
    </select>

    <!-- 分页查询管理员 -->
    <select id="findByPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM admin_users
        ORDER BY created_at DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 新增管理员 -->
    <insert id="insert" parameterType="com.example.shijiehouduan.entity.AdminUser" useGeneratedKeys="true" keyProperty="adminId">
        INSERT INTO admin_users (
            username, password, name, role, status, created_at
        ) VALUES (
            #{username}, #{password}, #{name}, #{role}, #{status}, NOW()
        )
    </insert>

    <!-- 更新管理员 -->
    <update id="update" parameterType="com.example.shijiehouduan.entity.AdminUser">
        UPDATE admin_users
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="name != null">name = #{name},</if>
            <if test="role != null">role = #{role},</if>
            <if test="status != null">status = #{status},</if>
            <if test="lastLogin != null">last_login = #{lastLogin},</if>
        </set>
        WHERE admin_id = #{adminId}
    </update>

    <!-- 更新管理员状态 -->
    <update id="updateStatus">
        UPDATE admin_users
        SET status = #{status}
        WHERE admin_id = #{adminId}
    </update>

    <!-- 更新管理员密码 -->
    <update id="updatePassword">
        UPDATE admin_users
        SET password = #{password}
        WHERE admin_id = #{adminId}
    </update>

    <!-- 更新管理员最后登录时间 -->
    <update id="updateLastLogin">
        UPDATE admin_users
        SET last_login = #{lastLogin}
        WHERE admin_id = #{adminId}
    </update>

    <!-- 删除管理员 -->
    <delete id="delete" parameterType="java.lang.Integer">
        DELETE FROM admin_users
        WHERE admin_id = #{adminId}
    </delete>

    <!-- 统计管理员总数 -->
    <select id="countAll" resultType="long">
        SELECT COUNT(*)
        FROM admin_users
    </select>

    <!-- 统计各角色的管理员数量 -->
    <select id="countByRole" resultType="java.util.Map">
        SELECT 
            role,
            COUNT(*) as count
        FROM admin_users
        GROUP BY role
        ORDER BY count DESC
    </select>

    <!-- 统计各状态的管理员数量 -->
    <select id="countByStatus" resultType="java.util.Map">
        SELECT 
            status,
            COUNT(*) as count
        FROM admin_users
        GROUP BY status
        ORDER BY count DESC
    </select>

    <!-- 检查用户名是否存在 -->
    <select id="checkUsernameExists" resultType="int" parameterType="java.lang.String">
        SELECT COUNT(*)
        FROM admin_users
        WHERE username = #{username}
    </select>
</mapper> 